{"version":3,"sources":["components/Header.js","components/AddCardForm.js","components/AddCardButton.js","components/ListBox.js","components/AddListForm.js","components/AddListButton.js","components/Dashboard.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","AddCardForm","state","itemName","onInputChange","e","_this","setState","Object","defineProperty","target","name","value","onSaveButtonClicked","_this$props","props","addToItem","index","this","type","onChange","placeholder","onClick","Component","AddCardButton","addingCard","onAddCardButtonClick","components_AddCardForm","ListBox","listName","listItems","deleteList","deleteItem","console","log","map","item","itemIndex","key","components_AddCardButton","AddListForm","addToList","ListButton","addingList","onListButtonClick","components_AddListForm","Dashboard","lists","items","newListItem","newList","concat","toConsumableArray","newItems","newItem","newSmallItemList","newAllItemList","slice","_this$state","length","x","components_ListBox","AddListButton","App","components_Header","components_Dashboard","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d66107d6.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            Trello Mock\n        </div>\n    );\n};\n\nexport default Header;","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nclass AddCardForm extends Component {\n    state = {\n        itemName: ''\n    }\n\n    onInputChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onSaveButtonClicked = () => {\n        let { itemName } = this.state;\n        let { addToItem, onSaveButtonClicked, index } = this.props;\n        addToItem(itemName, index);\n        onSaveButtonClicked();\n    }\n\n    render() {\n        let { onInputChange, onSaveButtonClicked } = this;\n        let { itemName } = this.state;\n        return (\n            <div className=\"form\">\n                <input className=\"input\" type=\"text\" name='itemName' value={itemName} onChange={onInputChange} placeholder={\"Enter a title for this card...\"}/>\n                <button className=\"save-button\" onClick={onSaveButtonClicked}>Save</button>\n            </div>\n        );\n    }\n}\n\n// AddCardForm.propTypes = {\n\n// };\n\nexport default AddCardForm;","import React, { Component } from 'react';\nimport AddCardForm from './AddCardForm';\n\n\nclass AddCardButton extends Component {\n    state = {\n        addingCard: false\n    }\n\n    onAddCardButtonClick = (e) => {\n\n        this.setState({\n            addingCard: true\n        })\n    }\n\n    onSaveButtonClicked = (e) => {\n        this.setState({\n            addingCard: false\n        })\n    }\n\n    render() {\n        let { addingCard } = this.state;\n        let { addToItem, index } = this.props;\n        let { onAddCardButtonClick, onSaveButtonClicked } = this;\n        return (\n            <div>\n            {\n                addingCard ? \n                (\n                    <AddCardForm index={index} onSaveButtonClicked={onSaveButtonClicked} addToItem={addToItem}/>\n                ) :\n                (\n                    <div className=\"card-button\" onClick={onAddCardButtonClick}>\n                        + Add Card...\n                    </div>\n                )\n            }\n                \n            </div>\n        );\n    }\n}\n\nexport default AddCardButton;","import React from 'react';\nimport {string, array} from 'prop-types';\nimport AddCardButton from './AddCardButton';\n\nconst ListBox = (props) => {\n    let { addToItem, listName, listItems, deleteList, deleteItem, index } = props;\n    console.log(\"List Items\", listItems);\n    return (\n        <div className=\"list-box\">\n            <div className=\"list-content\">\n                <div className=\"list-title\">\n                    <div className=\"list-text\">\n                        {listName}\n                        </div>\n                        <div className=\"list-text\" onClick={() => deleteList(index)}>\n                            x\n                        </div>\n                </div>\n                <div>  \n                    {listItems && listItems.map((item, itemIndex) => {\n                        return(\n                            <div key={itemIndex} className=\"card\">\n                            <div>\n                                {item}\n                            </div>\n                            <div onClick={() => deleteItem(index, itemIndex)}>\n                                x\n                            </div>\n                            </div>\n                        )\n                    })}\n                    <AddCardButton addToItem={addToItem} index={index}/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nListBox.propTypes = {\n    ListTitle: string,\n    CardNames: array\n};\n\nexport default ListBox;","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\n\nclass AddListForm extends Component {\n    state = {\n        listName: ''\n    }\n    onInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onSaveButtonClicked = () => {\n        let { listName } = this.state;\n        let { addToList, onSaveButtonClicked } = this.props;\n        addToList(listName);\n        onSaveButtonClicked();\n    }\n    render() {\n        let { onInputChange, onSaveButtonClicked } = this;\n        let { listName } = this.state;\n        return (\n            <div className=\"form list\">\n                <input className=\"input\" type=\"text\" name='listName' value={listName} onChange={onInputChange} placeholder={\"Enter a list name...\"}/>\n                <button className=\"save-button\" onClick={onSaveButtonClicked}>Save</button>\n            </div>\n        );\n    }\n}\n\n// AddListForm.propTypes = {\n\n// };\n\nexport default AddListForm;","import React, { Component } from 'react';\nimport AddListForm from './AddListForm';\n\n\nclass ListButton extends Component {\n    state = {\n        addingList: false\n    }\n\n    onListButtonClick = () => {\n        this.setState({\n            addingList: true\n        })\n    }\n\n    onSaveButtonClicked = () => {\n        this.setState({\n            addingList: false\n        })\n    }\n\n    render() {\n        let { addingList } = this.state;\n        let { addToList } = this.props;\n        let { onListButtonClick, onSaveButtonClicked } = this;\n        return (\n            <div>\n            {\n                addingList ? \n                (\n                    <AddListForm onSaveButtonClicked={onSaveButtonClicked} addToList={addToList} />\n                ) :\n                (\n                    <div className=\"list-button\" onClick={onListButtonClick}>\n                        + Add another List\n                    </div>\n                )\n            }\n                \n            </div>\n        );\n    }\n}\n\nexport default ListButton;","import React, { Component } from 'react';\nimport ListBox from './ListBox';\nimport AddListButton from './AddListButton';\nclass Dashboard extends Component {\n    state = {\n        lists: [\"Garden\", \"Food\"],\n        items: [[\"Carrot\", \"Potato\"], [\"Hamburger\", \"Pizza\"]]\n    }\n\n    addToList = newListItem => {\n        let newList = [\n            ...this.state.lists, newListItem\n        ]\n        let newItems = [\n            ...this.state.items, []\n        ]\n        this.setState({\n            lists: newList,\n            items: newItems\n        });\n    }\n\n    addToItem = (newItem, index) => {\n        let newSmallItemList = [\n            ...this.state.items[index], newItem\n        ];\n        let newAllItemList = [\n            ...this.state.items.slice(0, index), \n            newSmallItemList,\n            ...this.state.items.slice(index + 1)\n        ]\n        this.setState({\n            items: newAllItemList\n        });\n    }\n\n    deleteList = (index) => {\n        let newList = [\n            ...this.state.lists.slice(0, index),\n            ...this.state.lists.slice(index + 1)\n        ]\n\n        let newAllItemList = [\n            ...this.state.items.slice(0, index),\n            ...this.state.items.slice(index + 1)\n        ]\n\n        this.setState({\n            lists: newList,\n            items:newAllItemList\n        })\n    }\n\n    deleteItem = (index, itemIndex) => {\n        let newSmallItemList = [\n            ...this.state.items[index].slice(0, itemIndex),\n            ...this.state.items[index].slice(itemIndex + 1)\n        ]\n        let newAllItemList = [\n            ...this.state.items.slice(0, index),\n            newSmallItemList,\n            ...this.state.items.slice(index + 1)\n        ]\n        this.setState({\n            items: newAllItemList\n        })\n    }\n\n    render() {\n        let { lists, items } = this.state;\n        let { addToItem, addToList, deleteList, deleteItem } = this;\n        return (\n            <div>\n            <div className=\"dashboard-title\">\n                Demo Board\n            </div>\n            <div className=\"container cards\">\n            {\n                lists.length > 0 && lists.map((x, index) => {\n                    return (\n                        <ListBox key={index} addToItem={addToItem} deleteList={deleteList} deleteItem={deleteItem} index={index} listName={x} listItems={items[index]} />\n                    )\n                })\n                }\n            <AddListButton addToList={addToList}/>\n            </div>\n            </div>\n        );\n    }\n};\n\nexport default Dashboard;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Dashboard from './components/Dashboard';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <Header/>\n        <Dashboard/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}